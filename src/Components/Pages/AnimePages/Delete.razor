@page "/animes/delete"
@using Microsoft.EntityFrameworkCore
@using AnimeClone.Models
@inject IDbContextFactory<AnimeCloneContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Anime</h2>
    <hr />
    @if (anime is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Title</dt>
            <dd class="col-sm-10">@anime.Title</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Type</dt>
            <dd class="col-sm-10">@anime.Type</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Episodes</dt>
            <dd class="col-sm-10">@anime.Episodes</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@anime.Status</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Picture</dt>
            <dd class="col-sm-10">@anime.Picture</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Thumbnail</dt>
            <dd class="col-sm-10">@anime.Thumbnail</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DurationId</dt>
            <dd class="col-sm-10">@anime.DurationId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">AnimeSeasonId</dt>
            <dd class="col-sm-10">@anime.AnimeSeasonId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Sources</dt>
            <dd class="col-sm-10">@anime.Sources</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Synonyms</dt>
            <dd class="col-sm-10">@anime.Synonyms</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">RelatedAnime</dt>
            <dd class="col-sm-10">@anime.RelatedAnime</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Tags</dt>
            <dd class="col-sm-10">@anime.Tags</dd>
        </dl>
        <EditForm method="post" Model="anime" OnValidSubmit="DeleteAnime" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(anime is null)">Delete</button> |
            <a href="/animes">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Anime? anime;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        anime = await context.Animes.FirstOrDefaultAsync(m => m.Id == Id);

        if (anime is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteAnime()
    {
        using var context = DbFactory.CreateDbContext();
        context.Animes.Remove(anime!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/animes");
    }
}
